% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-functions-documentation.R,
%   R/model-in-situ.R, R/model-radar-gun.R, R/model-tether.R,
%   R/model-timing-gates.R
\name{model_functions}
\alias{model_functions}
\alias{model_in_situ}
\alias{model_radar_gun}
\alias{model_laser_gun}
\alias{model_tether}
\alias{model_tether_DC}
\alias{model_timing_gates}
\alias{model_timing_gates_TC}
\alias{model_timing_gates_FD}
\alias{model_timing_gates_FD_TC}
\title{Model functions}
\usage{
model_in_situ(
  velocity,
  acceleration,
  weights = 1,
  velocity_threshold = 3,
  velocity_step = 0.2,
  n_observations = 2,
  CV = NULL,
  na.rm = FALSE,
  ...
)

model_radar_gun(
  time,
  velocity,
  weights = 1,
  CV = NULL,
  use_observed_MSS = FALSE,
  na.rm = FALSE,
  ...
)

model_laser_gun(
  time,
  velocity,
  weights = 1,
  CV = NULL,
  use_observed_MSS = FALSE,
  na.rm = FALSE,
  ...
)

model_tether(
  distance,
  velocity,
  weights = 1,
  CV = NULL,
  use_observed_MSS = FALSE,
  na.rm = FALSE,
  ...
)

model_tether_DC(
  distance,
  velocity,
  weights = 1,
  CV = NULL,
  use_observed_MSS = FALSE,
  na.rm = FALSE,
  ...
)

model_timing_gates(distance, time, weights = 1, CV = NULL, na.rm = FALSE, ...)

model_timing_gates_TC(
  distance,
  time,
  weights = 1,
  CV = NULL,
  na.rm = FALSE,
  ...
)

model_timing_gates_FD(
  distance,
  time,
  weights = 1,
  FD = NULL,
  CV = NULL,
  na.rm = FALSE,
  ...
)

model_timing_gates_FD_TC(
  distance,
  time,
  weights = 1,
  FD = NULL,
  CV = NULL,
  na.rm = FALSE,
  ...
)
}
\arguments{
\item{weights}{Numeric vector. Default is 1}

\item{velocity_threshold}{Default is 3 m/s}

\item{velocity_step}{Velocity increment size for finding max acceleration. Default is 0.2 m/s}

\item{n_observations}{Number of top acceleration observations to keep in velocity bracket.
Default is 2}

\item{CV}{Should cross-validation be used to estimate model fit? Default is \code{NULL}. Otherwise use integer
indicating number of folds}

\item{na.rm}{Logical. Default is FALSE}

\item{...}{Forwarded to \code{\link[minpack.lm]{nlsLM}} function}

\item{time, velocity, distance, acceleration}{Numeric vector}

\item{use_observed_MSS}{Should observed peak \code{velocity} be used as \code{MSS} parameter? Default
is \code{FALSE}}

\item{FD}{Use this parameter if you do not want the \code{FD} parameter to be estimated, but rather take the
provided value}
}
\value{
List object with the following elements:
    \describe{
        \item{data}{Data frame used to estimate the sprint parameters}
        \item{model_info}{Extra information regarding model used}
        \item{model}{Model returned by the \code{\link[minpack.lm]{nlsLM}} function}
        \item{parameters}{List with the following estimated parameters:
            \code{MSS}, \code{MAC}, \code{TAU}, and \code{PMAX}}
        \item{correction}{List with additional model correcitons}
        \item{predictions}{Data frame with \code{.predictor}, \code{.observed},
            \code{.predicted}, and \code{.residual} columns}
        \item{model_fit}{List with multiple model fit estimators}
        \item{CV}{If cross-validation is performed, this will included the data as above, but
             for each fold}
        }
}
\description{
Family of functions that serve a purpose of estimating short sprint parameters

\code{model_in_situ} estimates short sprint parameters using velocity-acceleration trace,
    provided by the monitoring systems like GPS or LPS. See references for the information

\code{model_radar_gun} estimates short sprint parameters using time-velocity trace,
    with additional parameter \code{TC} serving as intercept

\code{model_laser_gun} alias for \code{\link{model_radar_gun}}

\code{model_tether} estimates short sprint parameters using distance-velocity trace
    (e.g., tether devices).

\code{model_tether_DC} estimates short sprint parameters using distance-velocity trace
    (e.g., tether devices) with additional distance correction \code{DC} parameter

\code{model_timing_gates} estimates short sprint parameters using distance-time trace
     (e.g., timing gates/photo cells)

\code{model_timing_gates_TC} estimates short sprint parameters using distance-time trace
     (e.g., timing gates/photo cells), with additional time correction parameter \code{TC}

\code{model_timing_gates_FD} estimates short sprint parameters using distance-time trace
     (e.g., timing gates/photo cells), with additional flying distance correction parameter \code{FD}

\code{model_timing_gates_FD_TC} estimates short sprint parameters using distance-time trace
     (e.g., timing gates/photo cells), with additional flying distance correction parameter \code{FD} and
     time correction parameter \code{TC}
}
\examples{
data("LPS_session")

insitu_model <- model_in_situ(LPS_session$velocity, LPS_session$acceleration)

print(insitu_model)
coef(insitu_model)
plot(insitu_model)


# Model Radar Gun (includes Time Correction)
df <- create_sprint_trace(MSS = 8, MAC = 6, time = seq(0, 6, 0.1))
m1 <- model_radar_gun(time = df$time, velocity = df$velocity)
m1
plot(m1)


# Model Laser Gun (includes Time Correction)
df <- create_sprint_trace(MSS = 8, MAC = 6, time = seq(0, 6, 0.1))
m1 <- model_laser_gun(time = df$time, velocity = df$velocity)
m1
plot(m1)


# Model Tether
df <- create_sprint_trace(MSS = 8, MAC = 6, time = seq(0, 6, 0.5))
m1 <- model_tether(distance = df$distance, velocity = df$velocity)
m1
plot(m1)


# Model Tether with Distance Correction (DC)
df <- create_sprint_trace(MSS = 8, MAC = 6, time = seq(0.001, 6, 0.5), DC = 5)
m1 <- model_tether_DC(distance = df$distance, velocity = df$velocity)
m1
plot(m1)

split_distances <- c(10, 20, 30, 40, 50)
split_times <- create_timing_gates_splits(
  gates = split_distances,
  MSS = 10,
  MAC = 9,
  FD = 0,
  TC = 0
)

# Simple model
simple_model <- model_timing_gates(split_distances, split_times)

print(simple_model)
coef(simple_model)
plot(simple_model)
split_distances <- c(10, 20, 30, 40, 50)
split_times <- create_timing_gates_splits(
  gates = split_distances,
  MSS = 10,
  MAC = 9,
  FD = 0,
  TC = 0.2,
  noise = 0.001
)

# TC model
TC_model <- model_timing_gates_TC(split_distances, split_times)

print(TC_model)
coef(TC_model)
plot(TC_model)
split_distances <- c(10, 20, 30, 40, 50)
split_times <- create_timing_gates_splits(
  gates = split_distances,
  MSS = 10,
  MAC = 9,
  FD = 0.5,
  TC = 0,
  noise = 0.001
)

# FD model
FD_model <- model_timing_gates_FD(split_distances, split_times)

print(FD_model)
coef(FD_model)
plot(FD_model)
split_distances <- c(10, 20, 30, 40, 50)
split_times <- create_timing_gates_splits(
  gates = split_distances,
  MSS = 10,
  MAC = 9,
  FD = 0.5,
  TC = 0.1,
  noise = 0.001
)

# FD TC model
FD_TC_model <- model_timing_gates_FD_TC(split_distances, split_times)

print(FD_TC_model)
coef(FD_TC_model)
plot(FD_TC_model)
}
\references{
Samozino P. 2018. A Simple Method for Measuring Force, Velocity and Power Capabilities and Mechanical
        Effectiveness During Sprint Running. In: Morin J-B, Samozino P eds. Biomechanics of Training and Testing.
       Cham: Springer International Publishing, 237â€“267. DOI: 10.1007/978-3-319-05633-3_11.

Clavel, P., Leduc, C., Morin, J.-B., Buchheit, M., & Lacome, M. (2023).
    Reliability of individual acceleration-speed profile in-situ in elite youth
    soccer players. Journal of Biomechanics, 153, 111602.
    https://doi.org/10.1016/j.jbiomech.2023.111602
}
